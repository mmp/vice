name: build-linux

on:
  push:
    paths-ignore:
      - 'website/**'
      - '**.md'
  pull_request:
    paths-ignore:
      - 'website/**'
      - '**.md'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]

    name: Build ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout source
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    - name: Setup go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
        cache-dependency-path: go.sum

    - name: Check go install
      run: go version

    - name: Install Linux dependencies
      run: |
        sudo apt update
        sudo apt install xorg-dev libsdl2-dev libsystemd-dev

    - name: Install whisper-cpp
      run: |
        cmake -S whisper.cpp -B whisper.cpp/build_go \
          -DBUILD_SHARED_LIBS=OFF \
          -DGGML_CPU=ON \
          -DGGML_OPENMP=ON \
          -DCMAKE_BUILD_TYPE=Release
        cmake --build whisper.cpp/build_go --parallel 4
        ls -l whisper.cpp/build_go/src/libwhisper.a
        ls -l whisper.cpp/build_go/ggml/src/libggml*.a

    - name: Build for lint (local resources)
      run: |
        go build -tags imguifreetype -o ./ ./cmd/vice
        ls

    - name: Check scenarios
      run:
        ./vice -lint

    - name: Bundle resources
      env:
         VICE_GCS_CREDENTIALS: ${{ secrets.GCS_UPLOAD_CREDENTIALS }}
      run: |
        if [ -z "${{ secrets.GCS_UPLOAD_CREDENTIALS }}" ]; then
            touch cmd/vice/manifest.json
        else
            go run ./cmd/bundleresources
            mv manifest.json cmd/vice
        fi

    - name: Build
      run: |
        git describe --tags --abbrev=8 --dirty --always --long > resources/version.txt
        go build -tags imguifreetype,downloadresources ./...

    - name: Run tests
      run:
        go test -v ./...
